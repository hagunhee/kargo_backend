# Generated by Django 4.1.6 on 2023-06-19 21:36

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("categories", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("username", models.CharField(default="", max_length=50, unique=True)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("influencer", "Influencer"),
                            ("buisness", "Buisness"),
                            ("brand", "Brand"),
                        ],
                        default="user",
                        max_length=50,
                    ),
                ),
                ("mileage", models.IntegerField(default=0)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("score", models.IntegerField(default=0)),
                (
                    "grade",
                    models.CharField(
                        choices=[
                            ("bronze", "Bronze"),
                            ("silver", "Silver"),
                            ("gold", "Gold"),
                            ("platinum", "Platinum"),
                            ("diamond", "Diamond"),
                        ],
                        default="bronze",
                        max_length=20,
                    ),
                ),
                ("birth", models.DateField(blank=True, null=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("last_sale", models.DateTimeField(blank=True, null=True)),
                ("login_count", models.IntegerField(default=0)),
                ("sale_count", models.IntegerField(default=0)),
                ("sale_amount", models.IntegerField(default=0)),
                (
                    "following",
                    models.ManyToManyField(
                        blank=True,
                        related_name="followers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Business",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("company_name", models.CharField(max_length=100, unique=True)),
                ("fax_number", models.CharField(max_length=100, unique=True)),
                ("contact_number", models.CharField(max_length=100, unique=True)),
                ("business_number", models.CharField(max_length=100, unique=True)),
                ("bank_name", models.CharField(max_length=100, unique=True)),
                ("acount_number", models.CharField(max_length=100, unique=True)),
                ("account_holder", models.CharField(max_length=100, unique=True)),
                ("service", models.CharField(max_length=100, unique=True)),
                (
                    "grade",
                    models.CharField(
                        choices=[
                            ("bronze", "bronze"),
                            ("silver", "silver"),
                            ("gold", "gold"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_approved", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Influencer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("shop_name", models.CharField(max_length=100, unique=True)),
                ("profile_imageURL", models.URLField(blank=True)),
                (
                    "fee_grade",
                    models.IntegerField(
                        choices=[(10, "Bronze"), (20, "Silver"), (30, "Gold")],
                        default=10,
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "account_holder",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "influencer_code",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("is_approved", models.BooleanField(default=False)),
                ("sell_count", models.IntegerField(default=0)),
                ("sell_amount", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="UserQna",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("subject", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("imgURL", models.URLField(blank=True, null=True)),
                ("status", models.CharField(max_length=20)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "answer_manager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="userqna_answer_manager",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="qnas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("shippingTitle", models.CharField(max_length=100)),
                ("shippingCountryCode", models.CharField(max_length=100)),
                ("shippingPhonePrefix", models.CharField(max_length=100)),
                ("shippingPhone", models.CharField(max_length=100)),
                ("shippingZipcode", models.CharField(max_length=100)),
                ("shippingCountry", models.CharField(max_length=100)),
                ("shippingCity", models.CharField(max_length=100)),
                ("shippingState", models.CharField(max_length=100)),
                ("shippingAddress", models.CharField(max_length=100)),
                ("shippingAddressSub", models.CharField(max_length=100)),
                ("is_default", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_addresses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InfluencerPosting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_approved", models.BooleanField(default=True)),
                ("is_posted", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("description", models.TextField(blank=True, null=True)),
                ("imageURL", models.URLField(blank=True)),
                ("videoURL", models.URLField(blank=True)),
                (
                    "influencer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="influencer_postings",
                        to="users.influencer",
                    ),
                ),
                (
                    "product_post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="influencer_postings",
                        to="products.productpost",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="influencer",
            name="product_posts",
            field=models.ManyToManyField(
                related_name="influencers",
                through="users.InfluencerPosting",
                to="products.productpost",
            ),
        ),
        migrations.AddField(
            model_name="influencer",
            name="user",
            field=models.OneToOneField(
                limit_choices_to={"role": "influencer"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="influencers",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="BusinessQna",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("status", models.CharField(max_length=20)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "answer_manager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="businessqna_answer_manager",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="qnas",
                        to="users.business",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_approved", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("bank_name", models.CharField(max_length=100, unique=True)),
                ("acount_number", models.CharField(max_length=100, unique=True)),
                ("account_holder", models.CharField(max_length=100, unique=True)),
                (
                    "brand_imageURL",
                    models.ImageField(blank=True, upload_to="brand_logo"),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="brands",
                        to="categories.category",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        limit_choices_to={"role": "brand"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="brands",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
