# Generated by Django 4.1.6 on 2023-06-26 21:58

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Basket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "total_weight",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "influencer_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "total_shipping_fee",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_coupon_discount",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_mileage_discount",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_original_price",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_discount_price",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "settle_price",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "free_shipping_FI",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
            ],
            options={
                "verbose_name": "Basket",
                "verbose_name_plural": "Baskets",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="BasketItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("ref", models.SlugField(max_length=128, verbose_name="Reference")),
                ("product_id", models.PositiveIntegerField(verbose_name="Product id")),
                (
                    "quantity",
                    models.PositiveIntegerField(default=1, verbose_name="Quantity"),
                ),
            ],
            options={
                "verbose_name": "Item",
                "verbose_name_plural": "Items",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PreOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "total_coupon_discount",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_original_price",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_mileage_discount",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_weight",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_code_discount",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "free_shipping_fi",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "total_shipping_fee",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_discount_price",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "settle_price",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "exchange_rate",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=10, null=True
                    ),
                ),
                ("user_memo", models.TextField(blank=True, null=True)),
                ("pg_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "pg_result_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("pg_tid", models.CharField(blank=True, max_length=100, null=True)),
                ("pg_app_no", models.CharField(blank=True, max_length=100, null=True)),
                ("pg_app_dt", models.DateTimeField(blank=True, null=True)),
                ("pg_fail_reason", models.TextField(blank=True, null=True)),
                ("pg_cancel_fi", models.BooleanField(default=False)),
                (
                    "pg_real_tax_supply_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "pg_real_tax_vat_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "pg_real_tax_free_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_taxfree", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PreOrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("quantity", models.PositiveIntegerField()),
                (
                    "total_coupon_discount",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_original_price",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_discount_price",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_mileage_discount",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "total_weight",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "settle_price",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
